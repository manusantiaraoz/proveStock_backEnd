// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider        = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  SUPERADMIN
  USER
}

model User{
  id String @default(uuid()) @id
  name String
  email String @unique
  dni String @unique
  password String
  address String
  phone String
  role Role @default(USER)
  isActive Boolean @default(true)
  isDeleted Boolean @default(false)
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
  budget Budget []
}

model Client{
  id String @default(uuid()) @id
  name String
  lastName String
  phone String
  address String 
  dni String @unique
  email String @unique
  isDeleted Boolean @default(false)
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
  budget Budget []
}
model Provider{
  id String @default(uuid()) @id
  name String
  dni String 
  phone String
  address String 
  email String 
  isDeleted Boolean @default(false)
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
  product Product[]
}
model Product{
  id String @default(uuid()) @id
  name String
  detail String ?
  p_purchase String
  p_sale String 
  email String 
  provider Provider @relation(fields: [providerId], references: [id])
  providerId String
  isDeleted Boolean @default(false)
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
  budget Budget[] @relation("productBudget")
}
model Budget{
  id String @default(uuid())@id
  user User @relation(fields: [userId], references: [id])
  userId String
  client Client @relation(fields: [clientId], references: [id])
  clientId String
  detail String ?
  product Product[] @relation("productBudget")
  isDeleted Boolean @default(false)
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
}